{"ast":null,"code":"var _jsxFileName = \"/Users/sudhanshu/Desktop/selfProjects/familyTree/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('auth-token');\n      if (token) {\n        const response = await api.get('/auth/me');\n        setUser(response.data);\n      }\n    } catch (error) {\n      localStorage.removeItem('auth-token');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const login = async (phone, password) => {\n    const response = await api.post('/auth/login', {\n      phone,\n      password\n    });\n    const {\n      token,\n      user: userData\n    } = response.data;\n    localStorage.setItem('auth-token', token);\n    setUser(userData);\n  };\n  const register = async (phone, name, password, email) => {\n    const response = await api.post('/auth/register', {\n      phone,\n      name,\n      password,\n      email\n    });\n    const {\n      token,\n      user: userData\n    } = response.data;\n    localStorage.setItem('auth-token', token);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('auth-token');\n    setUser(null);\n  };\n  const updateUser = userData => {\n    setUser(prev => prev ? {\n      ...prev,\n      ...userData\n    } : null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateUser,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","checkAuth","token","localStorage","getItem","response","get","data","error","removeItem","login","phone","password","post","userData","setItem","register","name","email","logout","updateUser","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sudhanshu/Desktop/selfProjects/familyTree/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { api } from '../services/api';\n\ninterface User {\n  id: string;\n  phone: string;\n  name: string;\n  email?: string;\n  profilePhoto?: string;\n  bio?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (phone: string, password: string) => Promise<void>;\n  register: (phone: string, name: string, password: string, email?: string) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('auth-token');\n      if (token) {\n        const response = await api.get('/auth/me');\n        setUser(response.data);\n      }\n    } catch (error) {\n      localStorage.removeItem('auth-token');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = async (phone: string, password: string) => {\n    const response = await api.post('/auth/login', { phone, password });\n    const { token, user: userData } = response.data;\n    \n    localStorage.setItem('auth-token', token);\n    setUser(userData);\n  };\n\n  const register = async (phone: string, name: string, password: string, email?: string) => {\n    const response = await api.post('/auth/register', { phone, name, password, email });\n    const { token, user: userData } = response.data;\n    \n    localStorage.setItem('auth-token', token);\n    setUser(userData);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('auth-token');\n    setUser(null);\n  };\n\n  const updateUser = (userData: Partial<User>) => {\n    setUser(prev => prev ? { ...prev, ...userData } : null);\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateUser,\n    isLoading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}